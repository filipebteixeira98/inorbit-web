/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * in.orbit
 * OpenAPI spec version: 1.0.0
 */
import * as axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
export type GetProfileGamification200 = {
  experience: number;
  experienceToNextLevel: number;
  level: number;
};

export type GetProfile200Profile = {
  avatarUrl: string;
  /** @nullable */
  email: string | null;
  id: string;
  /** @nullable */
  name: string | null;
};

export type GetProfile200 = {
  profile: GetProfile200Profile;
};

export type PostAuthGithub201 = {
  token: string;
};

export type PostAuthGithubBody = {
  code: string;
};

export type GetSummary200SummaryGoalsPerDayItem = {
  completedAt: string;
  id: string;
  title: string;
};

export type GetSummary200SummaryGoalsPerDay = {[key: string]: GetSummary200SummaryGoalsPerDayItem[]};

export type GetSummary200Summary = {
  completed: number;
  goalsPerDay: GetSummary200SummaryGoalsPerDay;
  total: number;
};

export type GetSummary200 = {
  summary: GetSummary200Summary;
};

export type GetSummaryParams = {
weekStartsAt?: string;
};

/**
 * @nullable
 */
export type PostCompletions201 = typeof PostCompletions201[keyof typeof PostCompletions201] | null;


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostCompletions201 = {
  null: 'null',
} as const;

export type PostCompletionsBody = {
  goalId: string;
};

/**
 * @nullable
 */
export type PostGoals201 = typeof PostGoals201[keyof typeof PostGoals201] | null;


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostGoals201 = {
  null: 'null',
} as const;

export type PostGoalsBody = {
  /**
   * @minimum 1
   * @maximum 7
   */
  desiredWeeklyFrequency: number;
  title: string;
};

export type GetPendingGoals200PendingGoalsItem = {
  completionCount: number;
  desiredWeeklyFrequency: number;
  id: string;
  title: string;
};

export type GetPendingGoals200 = {
  pendingGoals: GetPendingGoals200PendingGoalsItem[];
};





  /**
 * Get pending goals
 */
export const getPendingGoals = <TData = AxiosResponse<GetPendingGoals200>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/pending-goals`,options
    );
  }

/**
 * Create a goal
 */
export const postGoals = <TData = AxiosResponse<PostGoals201>>(
    postGoalsBody: PostGoalsBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/goals`,
      postGoalsBody,options
    );
  }

/**
 * Complete a goal
 */
export const postCompletions = <TData = AxiosResponse<PostCompletions201>>(
    postCompletionsBody: PostCompletionsBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/completions`,
      postCompletionsBody,options
    );
  }

/**
 * Get week summary
 */
export const getSummary = <TData = AxiosResponse<GetSummary200>>(
    params?: GetSummaryParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/summary`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * Authenticate user from Github code
 */
export const postAuthGithub = <TData = AxiosResponse<PostAuthGithub201>>(
    postAuthGithubBody: PostAuthGithubBody, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.post(
      `/auth/github`,
      postAuthGithubBody,options
    );
  }

/**
 * Get authenticated user profile
 */
export const getProfile = <TData = AxiosResponse<GetProfile200>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/profile`,options
    );
  }

/**
 * Get user level and experience
 */
export const getProfileGamification = <TData = AxiosResponse<GetProfileGamification200>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.default.get(
      `/profile/gamification`,options
    );
  }

export type GetPendingGoalsResult = AxiosResponse<GetPendingGoals200>
export type PostGoalsResult = AxiosResponse<PostGoals201>
export type PostCompletionsResult = AxiosResponse<PostCompletions201>
export type GetSummaryResult = AxiosResponse<GetSummary200>
export type PostAuthGithubResult = AxiosResponse<PostAuthGithub201>
export type GetProfileResult = AxiosResponse<GetProfile200>
export type GetProfileGamificationResult = AxiosResponse<GetProfileGamification200>
